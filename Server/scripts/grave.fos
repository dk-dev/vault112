// Author: cvet
// Script attached to all graves, in protos.
// Graves pids: 344..347, 374..376.
#include "_macros.fos"
#include "_itempid.fos"
#include "_msgstr.fos"
#include "entire.fos"
#include "grave_loot_init.fos"

import void PlayOpenLockerSound(Item& locker) from "sounds";


//import void AddGraves(Map& map, Critter@[]@ players) from "grave";
void AddGraves(Map& map, Critter@[]@ players)
{
	if(!HAS_CHANCE(10 + GetMaxLuck(players) * 3))
		return;
		
	Entire[] entires;
	ParseEntires(map, entires, ENTIRE_GRAVE_PLACE);
	if(entires.isEmpty())
		return;
		
	uint graveCount = Random(1, MIN(2, entires.length()));
	for (uint i = 0; i < graveCount; i++)
	{
		uint index = Random(0, entires.length() - 1);
		Item@ grave = map.AddItem(entires[index].HexX, entires[index].HexY, 
			Random(PID_LF_GRAVESITE_1, PID_LF_GRAVESITE_3), 1);
		if(!valid(grave))
			return;
			
		InitGraveContent(grave);
		grave.SetScript("grave@_GraveInit");
		entires.removeAt(index);
	}
}

int GetMaxLuck(Critter@[]@ players)
{
	int maxLuck = 1;
	if(!valid(players))
		return maxLuck;
	
	for (uint i = 0; i < players.length(); i++)
		if(valid(players[i]) && maxLuck < players[i].Stat[ST_LUCK])
			maxLuck = players[i].Stat[ST_LUCK];
	
	return maxLuck;
}

void InitGraveContent(Item& grave)
{
	LootDefinition@ content = GraveLoot[Random(0, GraveLoot.length() - 1)];
	content.AddItems(grave);
}

void _GraveInit( Item& grave, bool firstTime )
{
    grave.SetEvent( ITEM_EVENT_SKILL, "_GraveSkill" );
    grave.SetEvent( ITEM_EVENT_USE_ON_ME, "_GraveUseOnMe" );
}

bool _GraveSkill( Item& grave, Critter& cr, int skill )
{
    if( skill == SKILL_PICK_ON_GROUND || skill == SK_LOCKPICK )
    {
        if( FLAG( grave.LockerCondition, LOCKER_ISOPEN ) )
            cr.ShowContainer( null, grave, TRANSFER_HEX_CONT_DOWN );
        else
            cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, STR_USE_NOTHING );
        return true;
    }
    return false;
}

bool _GraveUseOnMe( Item& grave, Critter& cr, Item@ usedItem )
{
    if( valid( usedItem ) && usedItem.GetProtoId() == PID_SHOVEL )
    {
		if(_LockerIsOpen(grave))
		{
			grave.LockerClose();
			cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, STR_GRAVE_COVERED );
		}
		else
		{
			grave.LockerOpen();
			PlayOpenLockerSound(grave);
			cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, STR_GRAVE_UNCOVERED );
            cr.StatBase[ ST_KARMA ] -= 5;
            cr.KarmaBase[ KARMA_GRAVE_DIGGER ] = 1;
		}
        return true;
    }
    return false;
}
